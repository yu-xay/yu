user  nginx;
worker_processes  1; # number | auto

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid; #当前运行程序的主进程号
#include   /etc/nginx/conf.d/z.conf  #引入配置文件
events {
    accept_mutex on;
    #设置网路连接序列化，防止惊群现象(莫个时刻只有一个网络连接到来，多个睡眠进程会同时叫起)
    #会对多个nginx进程接s收连接进行序列化，防止多个进程对连接的增抢

    multi_accept off;
    #每个worker process 一次是否同时接受多个新到达的网络连接

    use epoll;
    ##事件驱动模型 select|poll|kqueue|epoll|resig|/dev/poll|eventport

    worker_connections  1024;
    #每个worker process 同时开启的最大连接数 包括所有的连接数
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #为web服务器提供媒体类型

    client_max_body_size     50m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    #服务器提供服务过程应答前端请求的日志 off 404


    sendfile        on;
    #是否使用sendfile()传输文件
    sendfile_max_chunk 0;
    #每个worker process 每次调用sendfile()传输的最大量不能超过该值

    keepalive_timeout  75;
    #建立会话连接后，保持这些连接打开一段时间
    #[header_timeout] 在报文Keep-Alive 设置超时时间
    keepalive_requests 100;
    # 长连接最大请求数

    #tcp_nopush     on;
    #gzip  on;

    server {
        #SWOOLE
        listen   *:88;
        server_name  127.0.0.1;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location / {
            proxy_pass http://php7.2-fpm:18306;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }
    server {
        listen   *:80;

        listen 443 ssl http2; #侦听443端口，用于SSL
        server_name  127.0.0.1;


        ssl_certificate      /etc/nginx/conf.d/cert/server.crt;
        ssl_certificate_key  /etc/nginx/conf.d/cert/server.key;
        ssl_session_timeout  5m;
        ssl_session_cache    shared:SSL:1m;
        ssl_ciphers          ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:aNULL:!MD5:!ADH:!RC4;
        ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers  on;


        #charset koi8-r;
        access_log  /var/log/nginx/host.access.log  main;
        #路由匹配
        location / {
            #root   /usr/share/nginx/html;
            root    /application;
            index  index.html index.htm index.php;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

         #PHPFPM 监控
         location /phpfpm {
            root           /application;
            # #$document_root 的参数是由root行定义
            fastcgi_pass   php7.2-fpm:9000;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
         }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root           /application;
            # #$document_root 的参数是由root行定义
            fastcgi_pass   php7.2-fpm:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}

